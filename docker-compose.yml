version: '3.8'
services:
  frontend_api:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: proyecto_frontend_api
    working_dir: /app/frontend_api
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--proxy-headers"]
    volumes:
      - ./:/app:cached
      - received:/app/received
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - CORS_ORIGINS=*
      - HOST_IP=${HOST_IP:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - FRONTEND_PORT=${FRONTEND_PORT:-5173}
    depends_on:
      - transport
      - imgserver
    networks:
      - app_network

  transport:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: proyecto_transport
    working_dir: /app
    command: ["python", "ejecutar_programa.py", "servidor"]
    volumes:
      - ./:/app:cached
    ports:
      - "9000:9000"
    depends_on:
      - imgserver
    networks:
      - app_network

  imgserver:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: proyecto_imgserver
    working_dir: /app
    command: ["python", "image_server.py"]
    volumes:
      - ./:/app:cached
    ports:
      - "9001:9001"
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: proyecto_frontend
    environment:
      - API_URL=http://${HOST_IP}:${API_PORT:-8000}
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - frontend_api
    networks:
      - app_network

  ngrok:
    image: ngrok/ngrok:latest
    container_name: proyecto_ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: ["http", "frontend:80", "--log", "stdout"]
    ports:
      - "4040:4040"
    depends_on:
      - frontend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  received:
